{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "DocsWebApi"
  },
  "host": "test.fia-tech.com",
  "basePath": "/DocsApi",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/ApiNotFound/Handle404": {
      "get": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "head": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/ApiNotFound": {
      "get": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "options": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "head": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiNotFound"
        ],
        "operationId": "ApiNotFound_Handle404",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Status/Ping": {
      "get": {
        "tags": [
          "Status"
        ],
        "operationId": "Status_Ping",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/agreement/updates": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "summary": "Get Updated Agreements based on the fromDate and toDate in the provided timezone",
        "operationId": "Agreement_GetUpdatedAgreements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "From Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "To Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of agreements which were last modified between the dates provided",
            "schema": {
              "$ref": "#/definitions/AgreementInfo"
            }
          }
        }
      }
    },
    "/agreement/details": {
      "get": {
        "tags": [
          "Agreement"
        ],
        "summary": "Get Agreement Details based on the passed AgreementId",
        "operationId": "Agreement_GetAgreementDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the details of agreement",
            "schema": {
              "$ref": "#/definitions/AgreementModel"
            }
          }
        }
      }
    },
    "/agreement/clearingAccount": {
      "post": {
        "tags": [
          "Clearing Accounts"
        ],
        "summary": "Adds a new clearing account to an agreement",
        "operationId": "Agreement_AddClearingAccount",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementClearingAccount",
            "in": "body",
            "description": "Agreement Clearing Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementClearingAccountUploadModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of clearing account addition to agreement"
          }
        }
      },
      "delete": {
        "tags": [
          "Clearing Accounts"
        ],
        "summary": "Deletes clearing account from an agreement",
        "operationId": "Agreement_DeleteClearingAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clearingAccountId",
            "in": "query",
            "description": "Clearing Account Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if clearing account is deleted successfully"
          }
        }
      }
    },
    "/agreement/clearingAccounts": {
      "post": {
        "tags": [
          "Clearing Accounts"
        ],
        "summary": "Adds multiple new clearing accounts to an agreement",
        "operationId": "Agreement_AddClearingAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementClearingAccounts",
            "in": "body",
            "description": "Agreement Clearing Accounts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementClearingAccountsUploadModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns status of each clearing accounts addition to agreement"
          }
        }
      }
    },
    "/agreement/expireClearingAccount": {
      "put": {
        "tags": [
          "Clearing Accounts"
        ],
        "summary": "Updates the expiration date on a clearing account",
        "operationId": "Agreement_ExpireClearingAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clearingAccountId",
            "in": "query",
            "description": "Clearing Account Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "expirationDate",
            "in": "query",
            "description": "Expiration Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if expiration date on clearing account is updated successfully"
          }
        }
      }
    },
    "/agreementRisk/updates": {
      "get": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Get Agreement Risk updates based on the fromDate and toDate in the provided timezone",
        "operationId": "AgreementRisk_GetAgreementRiskUpdates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "From Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "To Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of agreements for which risk limits, conditions and product exclusions were updated between the dates provided",
            "schema": {
              "$ref": "#/definitions/AgreementRiskUpdatesModel"
            }
          }
        }
      }
    },
    "/agreementRisk/details": {
      "get": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Get Agreement Risk Limits and Conditions based on the passed AgreementId",
        "operationId": "AgreementRisk_GetAgreementRiskDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the agreement risk information",
            "schema": {
              "$ref": "#/definitions/AgreementRiskModel"
            }
          }
        }
      }
    },
    "/agreementRisk/limits": {
      "post": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Set limits on an agreement",
        "operationId": "AgreementRisk_SetAgreementRiskLimits",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementRiskLimit",
            "in": "body",
            "description": "Agreement Risk Limit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementRiskLimitUploadModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk limits are set successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Delete Agreement Risk Limits based on the passed AgreementId",
        "operationId": "AgreementRisk_DeleteAgreementRiskLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk limits are deleted successfully"
          }
        }
      }
    },
    "/agreementRisk/conditions": {
      "post": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Set conditions on an agreement",
        "operationId": "AgreementRisk_SetAgreementRiskConditions",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementRiskCondition",
            "in": "body",
            "description": "Agreement Risk Condition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementRiskConditionUploadModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk conditions are set successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Delete Agreement Risk Conditions based on the passed AgreementId",
        "operationId": "AgreementRisk_DeleteAgreementRiskConditions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementId",
            "in": "query",
            "description": "Agreement Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "Details",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk conditions are deleted successfully"
          }
        }
      }
    },
    "/agreementRisk/productExclusions": {
      "post": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Set product exclusions on an agreement",
        "operationId": "AgreementRisk_SetAgreementRiskProductExclusions",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementRiskProductExclusions",
            "in": "body",
            "description": "Agreement Risk Product Exclusions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementRiskProductExclusions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk product exclusions are set successfully"
          }
        }
      },
      "delete": {
        "tags": [
          "Agreement Risk"
        ],
        "summary": "Delete product exclusions on agreement",
        "operationId": "AgreementRisk_DeleteAgreementRiskProductExclusions",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agreementRiskProductExclusions",
            "in": "body",
            "description": "Agreement Risk Product Exclusions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementRiskProductExclusions"
            }
          },
          {
            "name": "deleteAllProductExclusions",
            "in": "query",
            "description": "If true, all product exclusions will be deleted from the specified agreement",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if agreement risk product exclusions are deleted successfully"
          }
        }
      }
    },
    "/rateSchedule/updates": {
      "get": {
        "tags": [
          "Rate Schedule"
        ],
        "summary": "Get Updated Rate Schedules",
        "operationId": "RateSchedule_GetUpdatedRateSchedules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "From Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "To Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of rate schedules which were updated between the dates provided",
            "schema": {
              "$ref": "#/definitions/RateScheduleInfo"
            }
          }
        }
      }
    },
    "/rateSchedule/download": {
      "get": {
        "tags": [
          "Rate Schedule"
        ],
        "summary": "Download Rate Schedule",
        "operationId": "RateSchedule_DownloadRateSchedule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Rate Schedule File Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the details of rate schedule",
            "schema": {
              "$ref": "#/definitions/RateScheduleModel"
            }
          }
        }
      }
    },
    "/rateSchedule/upload": {
      "post": {
        "tags": [
          "Rate Schedule"
        ],
        "summary": "Upload Rate Schedule",
        "operationId": "RateSchedule_UploadRateSchedule",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rateSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateScheduleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if rate schedule is uploaded successfully"
          }
        }
      }
    },
    "/rateSchedule/delete": {
      "delete": {
        "tags": [
          "Rate Schedule"
        ],
        "summary": "Delete Rate Schedule",
        "operationId": "RateSchedule_DeleteRateSchedule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Rate Schedule File Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if rate schedule is deleted successfully"
          }
        }
      }
    },
    "/referenceData/parties": {
      "put": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Get Parties",
        "operationId": "ReferenceData_GetParties",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Reference Data Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDataPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of parties",
            "schema": {
              "$ref": "#/definitions/PartyModel"
            }
          }
        }
      }
    },
    "/referenceData/exchanges": {
      "put": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Get Exchanges",
        "operationId": "ReferenceData_GetExchanges",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Reference Data Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDataExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of exchanges",
            "schema": {
              "$ref": "#/definitions/ExchangeModel"
            }
          }
        }
      }
    },
    "/referenceData/exchangeFirms": {
      "put": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Get Exchange Firms",
        "operationId": "ReferenceData_GetPartyFirms",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Reference Data Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDataPartyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of exchange firms",
            "schema": {
              "$ref": "#/definitions/PartyFirmModel"
            }
          }
        }
      }
    },
    "/referenceData/exchangeProductGroups": {
      "put": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Get Exchange Product Groups",
        "operationId": "ReferenceData_GetExchangeProductGroups",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Reference Data Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDataExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of exchange product groups",
            "schema": {
              "$ref": "#/definitions/ExchangeProductGroupModel"
            }
          }
        }
      }
    },
    "/referenceData/enumerations": {
      "get": {
        "tags": [
          "Reference Data"
        ],
        "summary": "Get Enumerations",
        "operationId": "ReferenceData_GetEnumerations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of enumerations used"
          }
        }
      }
    },
    "/user/generateNewApiKey": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Generates a new Api Key",
        "operationId": "User_GenerateNewApiKey",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Response contains the new api key",
            "schema": {
              "$ref": "#/definitions/ApiKeyModel"
            }
          }
        }
      }
    },
    "/fcs/document/updates": {
      "get": {
        "tags": [
          "FcSchedule"
        ],
        "summary": "Get Updated Fc Documents based on the fromDate and toDate in the provided timezone",
        "operationId": "FcSchedule_GetUpdatedFcSchedules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "From Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "To Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of fcs documents which were last modified between the dates provided",
            "schema": {
              "$ref": "#/definitions/FcScheduleInfoModel"
            }
          }
        }
      }
    },
    "/fcs/document/details": {
      "get": {
        "tags": [
          "FcSchedule"
        ],
        "summary": "Get Fc Document Details based on the passed DocumentId",
        "operationId": "FcSchedule_GetFcsDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "query",
            "description": "Document Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the details of fcs document",
            "schema": {
              "$ref": "#/definitions/FcScheduleModel"
            }
          }
        }
      }
    },
    "/fcs/rateSchedule/updates": {
      "get": {
        "tags": [
          "FcsRateSchedule"
        ],
        "summary": "Get Updated Fc Rate Schedules",
        "operationId": "FcsRateSchedule_GetUpdatedFcSchedules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "From Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "To Date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the list of fcs rate schedules which were last modified between the dates provided",
            "schema": {
              "$ref": "#/definitions/FcRateScheduleInfoModel"
            }
          }
        }
      }
    },
    "/fcs/rateSchedule/delete": {
      "delete": {
        "tags": [
          "FcsRateSchedule"
        ],
        "summary": "Delete Fc Rate Schedule",
        "operationId": "FcsRateSchedule_DeleteFcRateSchedule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Rate Schedule File Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if rate schedule is deleted successfully"
          }
        }
      }
    },
    "/fcs/rateSchedule/upload": {
      "post": {
        "tags": [
          "FcsRateSchedule"
        ],
        "summary": "Upload Fc Rate Schedule",
        "operationId": "FcsRateSchedule_UploadRateSchedule",
        "consumes": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "rateSchedule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FcRateScheduleModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns OK if rate schedule is uploaded successfully"
          }
        }
      }
    },
    "/fcs/rateSchedule/download": {
      "get": {
        "tags": [
          "FcsRateSchedule"
        ],
        "summary": "Download Fc Rate Schedule",
        "operationId": "FcsRateSchedule_DownloadRateSchedule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/html",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyId",
            "in": "query",
            "description": "Party Id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Rate Schedule File Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Response contains the details of rate schedule",
            "schema": {
              "$ref": "#/definitions/FcRateScheduleModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgreementModel": {
      "type": "object",
      "properties": {
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExecutedDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerReference": {
          "type": "string"
        },
        "ProfitCenter": {
          "type": "string"
        },
        "SuppDocCount": {
          "format": "int32",
          "type": "integer"
        },
        "GroupId": {
          "format": "int64",
          "type": "integer"
        },
        "PriorAgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "FollowingAgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "AgreementTransitionedFrom": {
          "format": "int64",
          "type": "integer"
        },
        "AgreementTransitionedTo": {
          "format": "int64",
          "type": "integer"
        },
        "BillWho": {
          "type": "string"
        },
        "Jurisdiction": {
          "type": "string"
        },
        "Parties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementPartyModel"
          }
        },
        "ClearingAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClearingAccountModel"
          }
        },
        "RateSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRateScheduleModel"
          }
        },
        "UnsupportedProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnsupportedProductModel"
          }
        },
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "AgreementType": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "InitiatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementPartyModel": {
      "type": "object",
      "properties": {
        "AgreementPartyRole": {
          "type": "string"
        },
        "PartyFirms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyFirmModel"
          }
        },
        "PartyId": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ParentId": {
          "format": "int64",
          "type": "integer"
        },
        "InstitutionId": {
          "format": "int64",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "LegalEntityIdentifier": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ClearingAccountModel": {
      "type": "object",
      "properties": {
        "ClearingAccountType": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementRateScheduleModel": {
      "type": "object",
      "properties": {
        "ExecutingAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutingAccountModel"
          }
        },
        "Exchanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateScheduleExchangeModel"
          }
        },
        "RateScheduleId": {
          "format": "int64",
          "type": "integer"
        },
        "FileName": {
          "type": "string"
        },
        "DownloadFileName": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "UnsupportedProductModel": {
      "type": "object",
      "properties": {
        "ExchangeCode": {
          "type": "string"
        },
        "ProductGroupCode": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        },
        "UnsupportedBy": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RateScheduleFileNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasUnsupportedRateSchedules": {
          "type": "boolean"
        }
      }
    },
    "PartyFirmModel": {
      "type": "object",
      "properties": {
        "FirmCode": {
          "type": "string"
        },
        "ExchangeCode": {
          "type": "string"
        },
        "PrimaryFlag": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ExecutingAccountModel": {
      "type": "object",
      "properties": {
        "AccountId": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "RateScheduleExchangeModel": {
      "type": "object",
      "properties": {
        "Rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateModel"
          }
        },
        "ExchangeCode": {
          "type": "string"
        },
        "DirectBill": {
          "type": "boolean"
        }
      }
    },
    "RateModel": {
      "type": "object",
      "properties": {
        "ProductGroupCode": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        },
        "Rank": {
          "format": "int32",
          "type": "integer"
        },
        "TradeType": {
          "type": "string"
        },
        "SpreadType": {
          "type": "string"
        },
        "RateType": {
          "type": "string"
        },
        "ExecutionType": {
          "type": "string"
        },
        "ExecutionTypeName": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Min": {
          "format": "double",
          "type": "number"
        },
        "Max": {
          "format": "double",
          "type": "number"
        },
        "MinMaxDefine": {
          "type": "string"
        },
        "MinMaxApply": {
          "type": "string"
        },
        "AddOnAmount": {
          "format": "double",
          "type": "number"
        },
        "AddOnApply": {
          "type": "string"
        },
        "RateCurrency": {
          "type": "string"
        },
        "DefaultExecutionType": {
          "type": "boolean"
        },
        "Tiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TierModel"
          }
        },
        "Bands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BandModel"
          }
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "TierModel": {
      "type": "object",
      "properties": {
        "Period": {
          "type": "string"
        },
        "ApplyTo": {
          "type": "string"
        },
        "StartType": {
          "type": "string"
        },
        "StartTypeValue": {
          "format": "double",
          "type": "number"
        },
        "TierAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "BandModel": {
      "type": "object",
      "properties": {
        "ApplyTo": {
          "type": "string"
        },
        "BandValueType": {
          "type": "string"
        },
        "BandRateType": {
          "type": "string"
        },
        "BandNum": {
          "format": "int32",
          "type": "integer"
        },
        "Start": {
          "format": "double",
          "type": "number"
        },
        "End": {
          "format": "double",
          "type": "number"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "AgreementInfo": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "AgreementType": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "InitiatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementRiskUpdatesModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "RiskLastModified": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementRiskModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "RiskLastModified": {
          "format": "date-time",
          "type": "string"
        },
        "RiskStatus": {
          "type": "string"
        },
        "Limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRiskLimitModel"
          }
        },
        "Conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRiskConditionModel"
          }
        },
        "ProductExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementRiskProductExclusionModel"
          }
        }
      }
    },
    "AgreementRiskLimitModel": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "format": "int64",
          "type": "integer"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementRiskConditionModel": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AgreementRiskProductExclusionModel": {
      "type": "object",
      "properties": {
        "Region": {
          "type": "string"
        },
        "ProductName": {
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExchangeCode": {
          "type": "string"
        },
        "ProductGroupCode": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        }
      }
    },
    "AgreementRiskLimitUploadModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AgreementRiskConditionUploadModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        }
      }
    },
    "AgreementRiskProductExclusions": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "ProductExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductExclusionInfo"
          }
        }
      }
    },
    "ProductExclusionInfo": {
      "type": "object",
      "properties": {
        "ExchangeCode": {
          "type": "string"
        },
        "ProductGroupCode": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        }
      }
    },
    "AgreementClearingAccountUploadModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "ClearingAccount": {
          "$ref": "#/definitions/ClearingAccountModel"
        }
      }
    },
    "AgreementClearingAccountsUploadModel": {
      "type": "object",
      "properties": {
        "AgreementId": {
          "format": "int64",
          "type": "integer"
        },
        "ClearingAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClearingAccountModel"
          }
        }
      }
    },
    "FcScheduleModel": {
      "type": "object",
      "properties": {
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExecutedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExchangeFeesLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "GroupId": {
          "format": "int64",
          "type": "integer"
        },
        "PriorDocumentId": {
          "format": "int64",
          "type": "integer"
        },
        "FollowingDocumentId": {
          "format": "int64",
          "type": "integer"
        },
        "Parties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentPartyModel"
          }
        },
        "RateSchedule": {
          "$ref": "#/definitions/FcRateScheduleModel"
        },
        "InterestRateSchedule": {
          "type": "string"
        },
        "DocumentId": {
          "format": "int64",
          "type": "integer"
        },
        "State": {
          "type": "string"
        },
        "InitiatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DocumentPartyModel": {
      "type": "object",
      "properties": {
        "DocumentPartyRole": {
          "type": "string"
        },
        "PartyFirms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyFirmModel"
          }
        },
        "PartyId": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ParentId": {
          "format": "int64",
          "type": "integer"
        },
        "InstitutionId": {
          "format": "int64",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "LegalEntityIdentifier": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "FcRateScheduleModel": {
      "type": "object",
      "properties": {
        "Exchanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FcRateScheduleExchangeModel"
          }
        },
        "CustomFeeTypeSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FcRateScheduleCustomFeeTypeSettingModel"
          }
        },
        "ChargeType": {
          "type": "string"
        },
        "Service": {
          "type": "string"
        },
        "Min": {
          "format": "double",
          "type": "number"
        },
        "Max": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        },
        "Duration": {
          "type": "string"
        },
        "RateScheduleId": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "DownloadFileName": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "FcRateScheduleExchangeModel": {
      "type": "object",
      "properties": {
        "Rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FcRateModel"
          }
        },
        "ExchangeCode": {
          "type": "string"
        }
      }
    },
    "FcRateScheduleCustomFeeTypeSettingModel": {
      "type": "object",
      "properties": {
        "FeeTypeName": {
          "type": "string"
        },
        "DefaultCurrency": {
          "type": "string"
        },
        "EffectOnTotalPrice": {
          "type": "string"
        },
        "ShowToMyParty": {
          "type": "boolean"
        }
      }
    },
    "FcRateModel": {
      "type": "object",
      "properties": {
        "ProductGroupCode": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        },
        "TradeType": {
          "type": "string"
        },
        "SpreadType": {
          "type": "string"
        },
        "RateType": {
          "type": "string"
        },
        "ExecutionType": {
          "type": "string"
        },
        "ExecutionTypeName": {
          "type": "string"
        },
        "Min": {
          "format": "double",
          "type": "number"
        },
        "Max": {
          "format": "double",
          "type": "number"
        },
        "MinMaxDefine": {
          "type": "string"
        },
        "MinMaxApply": {
          "type": "string"
        },
        "AddOnAmount": {
          "format": "double",
          "type": "number"
        },
        "AddOnApply": {
          "type": "string"
        },
        "DefaultExecutionType": {
          "type": "boolean"
        },
        "ExchangeMembership": {
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountCurrency": {
          "type": "string"
        },
        "ExchangeFeesLastModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "FeeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeeTypeModel"
          }
        }
      }
    },
    "FeeTypeModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        }
      }
    },
    "FcScheduleInfoModel": {
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "int64",
          "type": "integer"
        },
        "State": {
          "type": "string"
        },
        "InitiatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string"
        },
        "EffectiveDate": {
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "FcRateScheduleInfoModel": {
      "type": "object",
      "properties": {
        "RateScheduleId": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "DownloadFileName": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "RateScheduleModel": {
      "type": "object",
      "properties": {
        "Exchanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateScheduleExchangeModel"
          }
        },
        "RateScheduleId": {
          "format": "int64",
          "type": "integer"
        },
        "FileName": {
          "type": "string"
        },
        "DownloadFileName": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "RateScheduleInfo": {
      "type": "object",
      "properties": {
        "RateScheduleId": {
          "format": "int64",
          "type": "integer"
        },
        "FileName": {
          "type": "string"
        },
        "DownloadFileName": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ReferenceDataPartyRequest": {
      "type": "object",
      "properties": {
        "PartyIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "FromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PartyModel": {
      "type": "object",
      "properties": {
        "PartyId": {
          "format": "int64",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ParentId": {
          "format": "int64",
          "type": "integer"
        },
        "InstitutionId": {
          "format": "int64",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "LegalEntityIdentifier": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ReferenceDataExchangeRequest": {
      "type": "object",
      "properties": {
        "ExchangeCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ExchangeModel": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ExchangeProductGroupModel": {
      "type": "object",
      "properties": {
        "ProductGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductGroupModel"
          }
        },
        "ExchangeCode": {
          "type": "string"
        }
      }
    },
    "ProductGroupModel": {
      "type": "object",
      "properties": {
        "ProductGroupCode": {
          "type": "string"
        },
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductModel"
          }
        }
      }
    },
    "ProductModel": {
      "type": "object",
      "properties": {
        "ProductCode": {
          "type": "string"
        },
        "ProductName": {
          "type": "string"
        },
        "ProductType": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ApiKeyModel": {
      "type": "object",
      "properties": {
        "ApiKey": {
          "type": "string"
        },
        "ExpiresOn": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "X-API-Key": {
      "type": "apiKey",
      "description": "API Key Authentication",
      "name": "X-API-Key",
      "in": "header"
    }
  }
}